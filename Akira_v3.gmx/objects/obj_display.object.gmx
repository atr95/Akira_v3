<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-900</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//display Messages
draw=false;
global.message_display=0;
display[0]="";
display[1]="This door is locked.";
display[2]="I picked up a keycard.";
display[3]="I am out of ammo.";
display[4]="I have no medkits.";
display[5]="I picked up a medkit.";
display[6]="I picked up some ammo.";
display[7]="I don't need a medkit now.";
display[8]="My weapon is fully loaded."; 
display[9]="Is this the end?...";
display[10]="This door won't budge.";
display[11]="I found a map to this area.";
display[12]="I used a medkit.";
display[13]="I unlocked the door.";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw=false;
global.display_message=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw=true;
alarm[1]=room_speed*5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(draw)
{
draw_set_alpha(1);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(font);
draw_set_color(c_white);
//this draws the specified message
draw_text(view_xview[0]+64,view_yview[0]+48,display[global.message_display]);
}
draw_set_color(c_white);

switch(global.player_health)
{
    case 0:
    {
    draw_sprite(spr_health,0,view_xview[0]+32,view_yview[0]+32);
    break;
    }
    case 1:
    {
    draw_sprite(spr_health,1,view_xview[0]+32,view_yview[0]+32);
    break;
    }
    case 2:
    {
    draw_sprite(spr_health,2,view_xview[0]+32,view_yview[0]+32);
    break;
    }
    case 3:
    {
    draw_sprite(spr_health,3,view_xview[0]+32,view_yview[0]+32);
    break;
    }
    case 4:
    {
    draw_sprite(spr_health,4,view_xview[0]+32,view_yview[0]+32);
    break;
    }
    case 5:
    {
    draw_sprite(spr_health,5,view_xview[0]+32,view_yview[0]+32);
    break;
    }
    case 6:
    {
    draw_sprite(spr_health,6,view_xview[0]+32,view_yview[0]+32);
    break;
    }
    case 7:
    {
    draw_sprite(spr_health,7,view_xview[0]+32,view_yview[0]+32);
    break;
    }
    default:
    {
    break;
    }  
}


/*
draw_text(view_xview[0]+16,view_yview[0]+16,"Health:");

draw_rectangle(view_xview[0]+96,
view_yview[0]+8,
view_xview[0]+96+128,
view_yview[0]+24,
true);

draw_rectangle(view_xview[0]+96,
view_yview[0]+8,
view_xview[0]+96+128*(global.player_health/7),
view_yview[0]+24,
false);
*/
draw_sprite(spr_med_hud,0,view_xview[0]+96,view_yview[0]+16);
draw_text(view_xview[0]+102,view_yview[0]+16," x" + string(global.medkit_count));
draw_sprite(spr_ammo_hud,0,view_xview[0]+160,view_yview[0]+16);
draw_text(view_xview[0]+176,view_yview[0]+16, + string(global.weapon_ammo) + "/" + string(global.ammo_count));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
